// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using db_cp.Models;

namespace db_cp.Migrations
{
    [DbContext(typeof(AppDBContext))]
    [Migration("20230518143743_newTable")]
    partial class newTable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.15")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("db_cp.Models.ButtonsEvents", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("ButtonColor")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<short>("Number")
                        .HasColumnType("smallint");

                    b.HasKey("ID");

                    b.ToTable("ButtonsEvents");
                });

            modelBuilder.Entity("db_cp.Models.ButtonsPosts", b =>
                {
                    b.Property<int>("Post")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("LeftColor")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<short>("LeftSide")
                        .HasColumnType("smallint");

                    b.Property<string>("RightColor")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<short>("RightSide")
                        .HasColumnType("smallint");

                    b.HasKey("Post");

                    b.ToTable("ButtonsPosts");
                });

            modelBuilder.Entity("db_cp.Models.Events", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("ButtonEvent_ID")
                        .HasColumnType("integer");

                    b.Property<DateTime>("DetectingTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("EventDescription")
                        .HasColumnType("text");

                    b.Property<int?>("EventType_ID")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("FixingTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("TimeUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("User_Login")
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.ToTable("Events");
                });

            modelBuilder.Entity("db_cp.Models.EventsTypes", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("EventType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.ToTable("EventsTypes");
                });

            modelBuilder.Entity("db_cp.Models.News", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("Time")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("ID");

                    b.ToTable("News");
                });

            modelBuilder.Entity("db_cp.Models.Users", b =>
                {
                    b.Property<string>("Login")
                        .HasColumnType("text");

                    b.Property<string>("MiddleName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Permission")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Login");

                    b.ToTable("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
